#!/usr/bin/env python3
import sys
import argparse


import fmteach.whlang.parser
import fmteach.whlang.typechecker
import fmteach.whlang.compiler
import fmteach.exercises


argparser = argparse.ArgumentParser ()

argparser.add_argument ("prgm")


subparsers = argparser.add_subparsers (help ="--help")



for p in fmteach.exercises.search_exercises ():
    p.addToParser (subparsers)

args = argparser.parse_args ()


parser = fmteach.whlang.parser.Parser ()
typechecker = fmteach.whlang.typechecker.Typechecker ()
compiler = fmteach.whlang.compiler.Compiler ()

inp = ""


with open (args.prgm,'r') as ff:
    whlan = parser.ParseString (ff.read ())
if whlan:
    if (typechecker.Check (whlan)):
        model = compiler.BuildProgram (whlan)
        

if "func" in args:
    args.func (args,model)
